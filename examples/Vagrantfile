# script will saved to C:\tmp\vagrant-shell.ps1
# only powershell syntax supported
$script = <<-SCRIPT
Set-Location C:
$url = "https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"
$file = "ConfigureRemotingForAnsible.ps1"
(New-Object -TypeName System.Net.WebClient).DownloadFile($url, $file)
powershell.exe -ExecutionPolicy ByPass -File $file -DisableBasicAuth -CertValidityDays 3650 -ForceNewSSLCert
SCRIPT

Vagrant.configure("2") do |config|

  config.vm.box = "win2019-std"
  #requires https://github.com/sprotheroe/vagrant-disksize
  config.disksize.size = '50GB'
  config.vm.guest = :windows
  config.vm.hostname = "win2019-std-test-vm"
  config.vm.communicator = "winrm"
  config.vm.network :forwarded_port, guest: 3389, host: 3389, id: 'rdp', auto_correct: true

  config.winrm.username = "vagrant"
  config.winrm.password = "vagrant"

  config.vm.provider "virtualbox" do |vb|
    #run virtualbox gui
    vb.gui = true
    #memory settings
    vb.memory = 2048
    #cpu settings
    vb.cpus = 2
    #virtualbox vm name
    vb.name = "win2019-std"
  end
  
  #run powershell provision script
  config.vm.provision "shell", inline: $script

  #try ansible
  config.vm.provision "ansible" do |ansible|
    # ansible.inventory_path = "ansible/inventory"
    ansible.playbook = "main.yml"
    ansible.verbose = "-vv"
    # ansible.extra_vars = {
      # ansible_ssh_user: "vagrant",
      # ansible_ssh_pass: "vagrant",
      # ansible_ssh_port: 55986,
      # ansible_connection: "winrm"
    # }
  end

end